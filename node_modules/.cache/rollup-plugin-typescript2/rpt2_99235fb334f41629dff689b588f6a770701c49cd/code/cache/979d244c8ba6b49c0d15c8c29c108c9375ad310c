{"code":"/**\r\n * 表达式类\r\n */\r\nexport class NExpression {\r\n    /**\r\n     * @param exprStr\t表达式串\r\n     */\r\n    constructor(exprStr) {\r\n        if (!exprStr) {\r\n            return;\r\n        }\r\n        const funStr = this.compile(exprStr);\r\n        this.execFunc = new Function('$model', `return ` + funStr);\r\n    }\r\n    /**\r\n     * 编译表达式串，替换字段和方法\r\n     * @param exprStr   表达式串\r\n     * @returns         编译后的表达式串\r\n     */\r\n    compile(exprStr) {\r\n        //字符串，object key，有效命名(函数或字段)\r\n        const reg = /('[\\s\\S]*?')|(\"[\\s\\S]*?\")|(`[\\s\\S]*?`)|([a-zA-Z$_][\\w$]*\\s*?:)|((\\.{3}|\\.)?[a-zA-Z$_][\\w$]*(\\.[a-zA-Z$_][\\w$]*)*(\\s*[\\[\\(](\\s*\\))?)?)/g;\r\n        let r;\r\n        let retS = '';\r\n        let index = 0; //当前位置\r\n        while ((r = reg.exec(exprStr)) !== null) {\r\n            let s = r[0];\r\n            if (index < r.index) {\r\n                retS += exprStr.substring(index, r.index);\r\n            }\r\n            if (s[0] === \"'\" || s[0] === '\"' || s[0] === '`') { //字符串\r\n                retS += s;\r\n            }\r\n            else {\r\n                let lch = s[s.length - 1];\r\n                if (lch === ':') { //object key\r\n                    retS += s;\r\n                }\r\n                else if (lch === '(' || lch === ')') { //函数，非内部函数\r\n                    retS += handleFunc(s);\r\n                }\r\n                else { //字段 this $model .field等不做处理\r\n                    if (s.startsWith('this.') || s === '$model' || s.startsWith('$model.') || this.isKeyWord(s) || (s[0] === '.' && s[1] !== '.')) { //非model属性\r\n                        retS += s;\r\n                    }\r\n                    else { //model属性\r\n                        let s1 = '';\r\n                        if (s.startsWith('...')) { // ...属性名\r\n                            s1 = '...';\r\n                            s = s.substring(3);\r\n                        }\r\n                        retS += s1 + '$model.' + s;\r\n                        //存在‘.’，则变量不全在在当前模型中\r\n                        if (s.indexOf('.') !== -1) {\r\n                            this.allModelField = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index = reg.lastIndex;\r\n        }\r\n        if (index < exprStr.length) {\r\n            retS += exprStr.substring(index);\r\n        }\r\n        return retS;\r\n        /**\r\n         * 处理函数串\r\n         * @param str   源串\r\n         * @returns     处理后的串\r\n         */\r\n        function handleFunc(str) {\r\n            let ind = str.indexOf('.');\r\n            //中间无'.'\r\n            if (ind === -1) {\r\n                let ind1 = str.lastIndexOf('(');\r\n                let fn = str.substring(0, ind1);\r\n                //末尾字符\r\n                if (!this.isKeyWord(fn)) {\r\n                    let lch = str[str.length - 1];\r\n                    if (lch !== ')') { //有参数\r\n                        return 'this.invokeMethod(\"' + fn + '\",';\r\n                    }\r\n                    else { //无参数\r\n                        return 'this.invokeMethod(\"' + fn + '\")';\r\n                    }\r\n                }\r\n            }\r\n            else if (str[0] !== '.') { //第一个为点不处理\r\n                let fn = str.substring(0, ind);\r\n                if (!this.isKeyWord(fn)) { //首字段非关键词，则为属性\r\n                    return '$model.' + str;\r\n                }\r\n            }\r\n            return str;\r\n        }\r\n    }\r\n    /**\r\n     * 表达式计算\r\n     * @param model \t模型\r\n     * @returns \t\t计算结果\r\n     */\r\n    val(model) {\r\n        let v;\r\n        try {\r\n            v = this.execFunc.apply(null, [model]);\r\n        }\r\n        catch (e) {\r\n            // console.error(e);\r\n        }\r\n        this.value = v;\r\n        return v;\r\n    }\r\n    isKeyWord(key) {\r\n        return [\r\n            'arguments',\r\n            'boolean',\r\n            'break',\r\n            'byte',\r\n            'catch',\r\n            'char',\r\n            'const',\r\n            'default',\r\n            'delete',\r\n            'do',\r\n            'double',\r\n            'else',\r\n            'enum',\r\n            'eval',\r\n            'false',\r\n            'float',\r\n            'for',\r\n            'function',\r\n            'goto',\r\n            'if',\r\n            'in',\r\n            'instanceof',\r\n            'int',\r\n            'let',\r\n            'long',\r\n            'new',\r\n            'null',\r\n            'return',\r\n            'short',\r\n            'switch',\r\n            'this',\r\n            'throw',\r\n            'true',\r\n            'try',\r\n            'this',\r\n            'throw',\r\n            'typeof',\r\n            'var',\r\n            'while',\r\n            'with',\r\n            'Array',\r\n            'Date',\r\n            'JSON',\r\n            'Set',\r\n            'Map',\r\n            'eval',\r\n            'function',\r\n            'Infinity',\r\n            'isFinite',\r\n            'isNaN',\r\n            'isPrototypeOf',\r\n            'Math',\r\n            'NaN',\r\n            'Number',\r\n            'Object',\r\n            'prototype',\r\n            'String',\r\n            'isPrototypeOf',\r\n            'undefined',\r\n            'valueOf'\r\n        ].includes(key);\r\n    }\r\n}\r\n//# sourceMappingURL=expression.js.map","references":[],"map":"{\"version\":3,\"file\":\"expression.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../core/expression.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/leiyang/develop/codework/jswork/npageflow/node_modules/.cache/rollup-plugin-typescript2/placeholder/core/expression.d.ts","writeByteOrderMark":false,"text":"/**\r\n * 表达式类\r\n */\r\nexport declare class NExpression {\r\n    /**\r\n     * 执行函数\r\n     */\r\n    execFunc: Function;\r\n    /**\r\n     * 只包含自有model变量\r\n     */\r\n    allModelField: boolean;\r\n    /**\r\n     * 值\r\n     */\r\n    value: any;\r\n    /**\r\n     * @param exprStr\t表达式串\r\n     */\r\n    constructor(exprStr: string);\r\n    /**\r\n     * 编译表达式串，替换字段和方法\r\n     * @param exprStr   表达式串\r\n     * @returns         编译后的表达式串\r\n     */\r\n    private compile;\r\n    /**\r\n     * 表达式计算\r\n     * @param model \t模型\r\n     * @returns \t\t计算结果\r\n     */\r\n    val(model: any): any;\r\n    private isKeyWord;\r\n}\r\n"}}
